diff --git a/libsrc/occ/occgenmesh.cpp b/libsrc/occ/occgenmesh.cpp
index 9a6c269e..480c6cc8 100644
--- a/libsrc/occ/occgenmesh.cpp
+++ b/libsrc/occ/occgenmesh.cpp
@@ -58,7 +58,7 @@ namespace netgen
   double ComputeH (double kappa, const MeshingParameters & mparam)
   {
     kappa *= mparam.curvaturesafety;
-    /*
+    /**/
     double hret;
 
     if (mparam.maxh * kappa < 1)
@@ -70,7 +70,7 @@ namespace netgen
       hret = mparam.maxh;
 
     return hret;
-    */
+    /**/
     // return min(mparam.maxh, 1/kappa);
     return (mparam.maxh*kappa < 1) ? mparam.maxh : 1/kappa;
   }
diff --git a/libsrc/occ/occmeshsurf.cpp b/libsrc/occ/occmeshsurf.cpp
index 812ef03c..077c526c 100644
--- a/libsrc/occ/occmeshsurf.cpp
+++ b/libsrc/occ/occmeshsurf.cpp
@@ -168,50 +168,6 @@ namespace netgen
 	gp_Vec du, dv;
 	occface->D1 (geominfo1.u, geominfo1.v, pnt, du, dv);
 
-        // static Timer t("occ-defintangplane calculations");
-        // RegionTimer reg(t);
-
-        Mat<3,2> D1_;
-	D1_(0,0) = du.X(); D1_(1,0) = du.Y(); D1_(2,0) = du.Z();
-	D1_(0,1) = dv.X(); D1_(1,1) = dv.Y(); D1_(2,1) = dv.Z();
-        auto D1T_ = Trans(D1_);
-	auto D1TD1_ = D1T_*D1_;
-	if (Det (D1TD1_) == 0) throw SingularMatrixException();
-        Mat<2,2> DDTinv_;
-        CalcInverse (D1TD1_, DDTinv_);
-
-        Mat<3,2> Y_;
-	Vec<3> y1_ = (ap2-ap1).Normalize();
-	Vec<3> y2_ = Cross(n, y1_).Normalize();
-	for (int i = 0; i < 3; i++)
-	  {
-	    Y_(i,0) = y1_(i);
-	    Y_(i,1) = y2_(i);
-	  }
-
-        auto A_ = DDTinv_ * D1T_ * Y_;
-	Mat<2,2> Ainv_;
-	if (Det(A_) == 0) throw SingularMatrixException();
-	CalcInverse (A_, Ainv_);
-
-	Vec<2> temp_ = Ainv_ * (psp2-psp1);
-	double r_ = temp_.Length();
-        Mat<2,2> R_;
-        R_(0,0) = temp_(0)/r_;
-        R_(1,0) = temp_(1)/r_;
-        R_(0,1) = -R_(1,0);
-        R_(1,1) = R_(0,0);
-
-        A_ = A_ * R_;
-        Ainv_ = Trans(R_) * Ainv_;
-
-        Amat = A_;
-        Amatinv = Ainv_;
-        
-	// temp = Amatinv * (psp2-psp1);
-        
-
-#ifdef OLD
 	DenseMatrix D1(3,2), D1T(2,3), DDTinv(2,2);
 	D1(0,0) = du.X(); D1(1,0) = du.Y(); D1(2,0) = du.Z();
 	D1(0,1) = dv.X(); D1(1,1) = dv.Y(); D1(2,1) = dv.Z();
@@ -284,8 +240,7 @@ namespace netgen
 	    }
         // cout << "=?= Ainv = " << endl << Ainv << endl;
 	temp = Amatinv * (psp2-psp1);
-        cout << " =?= Amatinv = " << Amatinv << endl;        
-#endif
+        // cout << " =?= Amatinv = " << Amatinv << endl;        
       };
  
   }
